name: cx

on: push

env:
  AWS_REGION: us-east-1

defaults:
  run:
    shell: "/bin/bash {0}"

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: clone the repo
        uses: actions/checkout@v2.3.4

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.5.3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: map branch 2 test/prod
        run: |
        if [[ ${{ github.ref }} == *main ]]; then
        echo "ENVIRONMENT=test" >> $GITHUB_ENV # TODO: revert 2 prod
        else
        echo "ENVIRONMENT=test" >> $GITHUB_ENV
        fi

      - name: configure the environment
        id: configure_environment
        run: |
        echo "REVERSE_STRING=$ENVIRONMENT-reverse-string" >> $GITHUB_ENV
        echo "STRING=$ENVIRONMENT-string" >> $GITHUB_ENV
        echo "REVERSE_STRING_HANDLER_NAME=$ENVIRONMENT-reverse-string-handler" >> $GITHUB_ENV

      - name: deploy the reverse string handler
        run: |
          code_size=$( \
            aws lambda get-function-configuration \
              --function-name=${{ env.READ_PROFILE_HANDLER_NAME }} \
              --query=CodeSize \

         )
          if ! git diff HEAD HEAD~1 --exit-code -s "./lambdas/string/reverse/*" || \
             (( $code_size < 419 ));
          then
            cd ./lambdas/string/reverse
            npm ci --only=prod
            cd ../../..
            npx @zeit/ncc@0.22.3 build \
              --external=aws-sdk \
              --out=./lambdas/string/bundles/reverse \
              ./lambdas/string/reverse/index.js
            zip -j /tmp/bundle.zip ./lambdas/string/bundles/reverse/index.js
            aws lambda update-function-code \
              --function-name=${{ env.REVERSE_STRING_HANDLER_NAME }} \
              --publish \
              --zip-file=fileb:///tmp/reverse_string_lambda.zip
          fi

      - name: setup terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        run: terraform init

      - name: Terraform validate
        run: terraform validate -no-color


      - name: Terraform Plan
        id: plan
        # if: github.event_name == 'pull_request'
        run: |
          terraform plan \
            -no-color \
            -var="reverse_string=$REVERSE_STRING" \
            -var="string=$STRING"

        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        # if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          terraform apply \
            -auto-approve \
            -no-color \
            -var="reverse_string=$REVERSE_STRING" \
            -var="string=$STRING"
